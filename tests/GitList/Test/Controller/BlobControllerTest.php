<?php

namespace GitList\Test\Controller;

use Silex\WebTestCase;
use Symfony\Component\Filesystem\Filesystem;
use Gitter\Client;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-22 at 20:17:55.
 */
class BlobControllerTest
    extends WebTestCase
{
    protected static $tmpdir;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public static function setUpBeforeClass()
    {
        if (getenv('TMP')) {
            self::$tmpdir = getenv('TMP');
        } elseif (getenv('TMPDIR')) {
            self::$tmpdir = getenv('TMPDIR');
        } else {
           self::$tmpdir = '/tmp';
        }

        self::$tmpdir .= '/gitlist_' . md5(time() . mt_rand()) . '/';
        
        $fs = new Filesystem();
        $fs->mkdir(self::$tmpdir);

        if (!is_writable(self::$tmpdir)) {
            $this->markTestSkipped('There are no write permissions in order to create test repositories.');
        }

        $options['path'] = getenv('GIT_CLIENT') ?: '/usr/bin/git';
        $options['hidden'] = array(self::$tmpdir . '/hiddenrepo');
        $git = new Client($options);

        // GitTest repository fixture
        $git->createRepository(self::$tmpdir . 'GitTest');
        $repository = $git->getRepository(self::$tmpdir . 'GitTest');
        file_put_contents(self::$tmpdir . 'GitTest/README.md', "## GitTest\nGitTest is a *test* repository!");
        file_put_contents(self::$tmpdir . 'GitTest/test.php', "<?php\necho 'Hello World'; // This is a test");
        $repository->setConfig('user.name', 'Luke Skywalker');
        $repository->setConfig('user.email', 'luke@rebel.org');
        $repository->addAll();
        $repository->commit("Initial commit");
        $repository->createBranch('issue12');
        $repository->createBranch('issue42');
    }

   
    public static function tearDownAfterClass()
    {
        $fs = new Filesystem();
        $fs->remove(self::$tmpdir);
    }

    public function createApplication()
    {
        $app = require 'boot.php';
        $app['debug'] = true;
        $app['git.repos'] = self::$tmpdir;
        return $app;
    }
    
    /**
     * @covers GitList\Controller\BlobController::connect
     */
    public function testBlobPage() {
        $client = $this->createClient();

        $crawler = $client->request('GET', '/GitTest/blob/master/test.php');
        $this->assertTrue($client->getResponse()->isOk());
        $this->assertCount(1, $crawler->filter('.breadcrumb .active:contains("test.php")'));
        $this->assertEquals('/GitTest/raw/master/test.php', $crawler->filter('.source-header .btn-group a')->eq(0)->attr('href'));
        $this->assertEquals('/GitTest/blame/master/test.php', $crawler->filter('.source-header .btn-group a')->eq(1)->attr('href'));
        $this->assertEquals('/GitTest/commits/master/test.php', $crawler->filter('.source-header .btn-group a')->eq(2)->attr('href'));
    }

    /**
     * @covers GitList\Controller\BlobController::connect
     */
    public function testRawPage()
    {
        $client = $this->createClient();
        $crawler = $client->request('GET', '/GitTest/raw/master/test.php');
        
        $this->assertTrue($client->getResponse()->isOk());
        $this->assertEquals("<?php\necho 'Hello World'; // This is a test", $client->getResponse()->getContent());
    }
}
